//rinkeby account0 address: '0x83fb0a6537f5ad53742aa6bf86e54db369bbd0f6'
//https://rinkeby.etherscan.io/address/0x83fb0a6537f5ad53742aa6bf86e54db369bbd0f6
//contract address: '0xe264aFC6441472DEA42F5cBC35d59e16F4A4ee49'
//https://github.com/ethjs/ethjs-contract
import React, { Component } from 'react';
import { Button, Image, View, Text, StyleSheet } from 'react-native';
import Connector from './Connector.js';
import logoIcon from '../img/icon96.png';

import BN from 'bn.js';
import Eth from 'ethjs-query';
import HttpProvider from 'ethjs-provider-http';
import EthRPC from 'ethjs-rpc';
//import EthABI from 'ethjs-abi';
import EthContract from 'ethjs-contract';

import Unit from 'ethjs-unit';
//const provider = 'http://192.168.1.7:8545';
//const provider = 'https://rinkeby.infura.io/';
const ethQuery = new Eth(new HttpProvider(testnetProvider), { debug: true, logger: console, jsonSpace: 0 });
const ethRPC = new EthRPC(new HttpProvider(testnetProvider));

const contract = new EthContract(ethQuery);
//const entboxABIFile = require('../contracts/EntboxContract.json');

const entboxABIFile = '[{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"id","type":"string"}],"name":"getTokenCreatorFromReceipt","outputs":[{"name":"tokenCreator","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"id","type":"string"}],"name":"getTokenCreatedStatusFromReceipt","outputs":[{"name":"tokenCreatedStatus","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"_supply","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"id","type":"string"}],"name":"getDetsAmountFromReceipt","outputs":[{"name":"detsAmount","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"supply","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"id","type":"string"},{"name":"detsToDestroy","type":"uint256"},{"name":"iban","type":"string"}],"name":"destroyDets","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"version","outputs":[{"name":"","type":"string"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"who","type":"address"}],"name":"balanceOf","outputs":[{"name":"value","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"getDetsBalance","outputs":[{"name":"detsAmount","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"to","type":"address"},{"name":"value","type":"uint256"}],"name":"transfer","outputs":[{"name":"success","type":"bool"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"id","type":"string"}],"name":"getDetsDestroyer","outputs":[{"name":"detsDestroyer","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"id","type":"string"}],"name":"createDets","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"id","type":"string"}],"name":"getDetsDestroyed","outputs":[{"name":"detsDestroyed","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"id","type":"string"},{"name":"tokenCreator","type":"address"},{"name":"detsAmount","type":"uint256"},{"name":"euroAmount","type":"uint256"}],"name":"storeReceipt","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"id","type":"string"}],"name":"getIban","outputs":[{"name":"iban","type":"string"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"id","type":"string"}],"name":"getEuroAmountFromReceipt","outputs":[{"name":"euroAmount","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"getTotalDetsAmount","outputs":[{"name":"detsAmount","type":"uint256"}],"payable":false,"type":"function"},{"inputs":[],"payable":false,"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"}]';
const entboxABI = JSON.parse(entboxABIFile);
const bytecode = '60606040526000600755341561001157fe5b5b5b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b611930806100a76000396000f30060606040523615610126576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101285780630c07b4fb146101c1578063110891fb1461025b57806315945790146102cd5780631747e1a2146102f357806318160ddd14610361578063313ce5671461038757806334f529aa146103ad57806354fd4d501461045357806370a08231146104ec5780637fbe6cc4146105365780638da5cb5b1461058057806395d89b41146105d2578063a9059cbb1461066b578063b37dff81146106c2578063b702bbd91461075c578063cef522e6146107b6578063e61b31a714610824578063ee728641146108af578063f2fde38b14610990578063f7948227146109c6578063f8f09aeb14610a34575bfe5b341561013057fe5b610138610a5a565b6040518080602001828103825283818151815260200191508051906020019080838360008314610187575b80518252602083111561018757602082019150602081019050602083039250610163565b505050905090810190601f1680156101b35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101c957fe5b610219600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610a94565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561026357fe5b6102b3600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610b2b565b604051808215151515815260200191505060405180910390f35b34156102d557fe5b6102dd610baf565b6040518082815260200191505060405180910390f35b34156102fb57fe5b61034b600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610bb5565b6040518082815260200191505060405180910390f35b341561036957fe5b610371610c2c565b6040518082815260200191505060405180910390f35b341561038f57fe5b610397610c37565b6040518082815260200191505060405180910390f35b34156103b557fe5b610451600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610c3c565b005b341561045b57fe5b610463610e42565b60405180806020018281038252838181518152602001915080519060200190808383600083146104b2575b8051825260208311156104b25760208201915060208101905060208303925061048e565b505050905090810190601f1680156104de5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156104f457fe5b610520600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610e7c565b6040518082815260200191505060405180910390f35b341561053e57fe5b61056a600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610ec6565b6040518082815260200191505060405180910390f35b341561058857fe5b610590610f10565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156105da57fe5b6105e2610f36565b6040518080602001828103825283818151815260200191508051906020019080838360008314610631575b8051825260208311156106315760208201915060208101905060208303925061060d565b505050905090810190601f16801561065d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561067357fe5b6106a8600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610f70565b604051808215151515815260200191505060405180910390f35b34156106ca57fe5b61071a600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506111a9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561076457fe5b6107b4600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611240565b005b34156107be57fe5b61080e600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506113df565b6040518082815260200191505060405180910390f35b341561082c57fe5b6108ad600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050611456565b005b34156108b757fe5b610907600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611600565b6040518080602001828103825283818151815260200191508051906020019080838360008314610956575b80518252602083111561095657602082019150602081019050602083039250610932565b505050905090810190601f1680156109825780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561099857fe5b6109c4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611715565b005b34156109ce57fe5b610a1e600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506117b8565b6040518082815260200191505060405180910390f35b3415610a3c57fe5b610a4461182f565b6040518082815260200191505060405180910390f35b604060405190810160405280601181526020017f436861696e73204f662046726565646f6d00000000000000000000000000000081525081565b60006004826040518082805190602001908083835b60208310610acc5780518252602082019150602081019050602083039250610aa9565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b919050565b60006004826040518082805190602001908083835b60208310610b635780518252602082019150602081019050602083039250610b40565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060040160009054906101000a900460ff1690505b919050565b60015481565b60006004826040518082805190602001908083835b60208310610bed5780518252602082019150602081019050602083039250610bca565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206002015490505b919050565b600060015490505b90565b600081565b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610c895760006000fd5b6000610c94846113df565b141515610ca15760006000fd5b6000821415610cb05760006000fd5b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550816007600082825403925050819055506080604051908101604052808481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152506005846040518082805190602001908083835b60208310610d7b5780518252602082019150602081019050602083039250610d58565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000820151816000019080519060200190610dca92919061184b565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190610e3892919061184b565b509050505b505050565b604060405190810160405280600381526020017f302e31000000000000000000000000000000000000000000000000000000000081525081565b6000600060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b919050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b604060405190810160405280600481526020017f446574730000000000000000000000000000000000000000000000000000000081525081565b600081600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410801561103f5750600060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401105b1561104a5760006000fd5b611093600060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361183a565b151561109f5760006000fd5b81600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190505b92915050565b60006005826040518082805190602001908083835b602083106111e157805182526020820191506020810190506020830392506111be565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b919050565b600060006004836040518082805190602001908083835b6020831061127a5780518252602082019150602081019050602083039250611257565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060040160009054906101000a900460ff16156112c95760006000fd5b60006112d484610bb5565b1115156112e15760006000fd5b60016004846040518082805190602001908083835b6020831061131957805182526020820191506020810190506020830392506112f6565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060040160006101000a81548160ff02191690831515021790555061136f83610a94565b915061137a83610bb5565b905080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550806002600082825401925050819055505b505050565b60006005826040518082805190602001908083835b6020831061141757805182526020820191506020810190506020830392506113f4565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206002015490505b919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114b35760006000fd5b60a0604051908101604052808581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001600015158152506004856040518082805190602001908083835b6020831061152a5780518252602082019150602081019050602083039250611507565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600082015181600001908051906020019061157992919061184b565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548160ff0219169083151502179055509050505b5b50505050565b6116086118cb565b6005826040518082805190602001908083835b6020831061163e578051825260208201915060208101905060208303925061161b565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117085780601f106116dd57610100808354040283529160200191611708565b820191906000526020600020905b8154815290600101906020018083116116eb57829003601f168201915b505050505090505b919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117725760006000fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b50565b60006004826040518082805190602001908083835b602083106117f057805182526020820191506020810190506020830392506117cd565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206003015490505b919050565b600060075490505b90565b600082828401101590505b92915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061188c57805160ff19168380011785556118ba565b828001600101855582156118ba579182015b828111156118b957825182559160200191906001019061189e565b5b5090506118c791906118df565b5090565b602060405190810160405280600081525090565b61190191905b808211156118fd5760008160009055506001016118e5565b5090565b905600a165627a7a723058207ebed2981bca96b01acd10baf2d357547041b38aaac9148e4df0b0207c08c76f0029'

class TokenInfo extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      coinbase: '',
      coinbaseBalance: '0',
      errorMessage: '',
      tokenAddress: '',
      tokenBalance: '',
    };

  }

  componentWillMount() {
    var self = this;
    const coinbase = daCoinbase; //'0x83fb0a6537f5ad53742aa6bf86e54db369bbd0f6';
    self.setState({coinbase: coinbase});
    const tokenAddress = daTokenAddress; //'0xe264aFC6441472DEA42F5cBC35d59e16F4A4ee49';
    self.setState({tokenAddress: tokenAddress});

    const Entbox = contract(entboxABI, bytecode, {
      from: coinbase,
      gas: 300000,
    });

    const entbox = Entbox.at(tokenAddress);

    ethRPC.sendAsync({
      method: 'eth_getBalance',
      params: [coinbase, 'latest'],
    }, (err, coinbaseBalance) => {
        var balEth = Unit.fromWei(coinbaseBalance, 'ether');
        self.setState({coinbaseBalance: balEth.toString() + ' ETH'});
    });

    ethRPC.sendAsync({
      method: 'eth_getBalance',
      params: [tokenAddress, 'latest'],
    }, (err, tokenBalance) => {
        var balTokenEth = Unit.fromWei(tokenBalance, 'ether');
        self.setState({tokenBalance: balTokenEth.toString() + ' ETH'});
    });

  }
    
  render() {
    return (
      <View style={styles.container}>
        <Text style={styles.headText}>
        	<Image source={logoIcon} style={{width: 170, height: 170}} />
        	<Text style={styles.header_h4}>Token Info{'\n'}</Text>
        </Text>
        <Text style={styles.baseText}>
          <Text style={styles.error}>{this.state.errorMessage}</Text>
          <Text style={styles.prompt}>Account Address: {'\n'}</Text>
          <Text>{this.state.coinbase}{'\n'}</Text>
          <Text style={styles.prompt}>Balance: </Text>
          <Text>{this.state.coinbaseBalance}{'\n'}</Text>
          <Text style={styles.prompt}>DET Token Address: {'\n'}</Text>
          <Text>{this.state.tokenAddress}{'\n'}</Text>
        </Text>
      </View>
    );
  }
}


const styles = StyleSheet.create({
  headText: {
    textAlign: 'left',
    marginBottom: 10,
  },
  baseText: {
    textAlign: 'left',
    color: '#999999',
    marginBottom: 5,
  },
  header_h4: {
    color: '#8192A2',
    fontSize: 20,
    paddingBottom: 10,
  },
  prompt: {
    color: '#BCB3A2',
  },
  container: {
    paddingLeft: 10,
    paddingRight: 10,
    paddingTop: 10,
  },
  error: {
    color: '#3399BB'
  },
});


export default TokenInfo;